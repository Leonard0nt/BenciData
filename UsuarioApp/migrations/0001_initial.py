# Generated by Django 5.1.2 on 2025-09-21 06:08

import UsuarioApp.models
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Position",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("user_position", models.CharField(max_length=45, unique=True)),
                (
                    "permission_code",
                    models.CharField(
                        choices=[
                            ("OWNER", "Dueño"),
                            ("ADMINISTRATOR", "Administrador"),
                            ("ACCOUNTANT", "Contador"),
                            ("HEAD_ATTENDANT", "Bombero encargado"),
                            ("ATTENDANT", "Bombero"),
                        ],
                        default="ATTENDANT",
                        max_length=25,
                    ),
                ),
            ],
            options={
                "db_table": "position",
            },
        ),
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("last_activity", models.DateTimeField(blank=True, null=True)),
                (
                    "image",
                    models.ImageField(
                        default="profile.webp",
                        upload_to=UsuarioApp.models.profile_picture_path,
                    ),
                ),
                (
                    "company_rut",
                    models.CharField(
                        blank=True,
                        max_length=12,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Ingrese un RUT válido en el formato 12.345.678-9",
                                regex="^[0-9.]+-[0-9kK]{1}$",
                            )
                        ],
                        verbose_name="RUT Empresa",
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Teléfono"
                    ),
                ),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[("M", "Masculino"), ("F", "Femenino"), ("O", "Otro")],
                        max_length=1,
                        null=True,
                        verbose_name="Sexo",
                    ),
                ),
                (
                    "date_of_birth",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha de nacimiento"
                    ),
                ),
                (
                    "salario",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=10,
                        null=True,
                        verbose_name="Salario",
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="Dirección"
                    ),
                ),
                (
                    "date_of_hire",
                    models.DateField(
                        blank=True, null=True, verbose_name="Fecha de contratación"
                    ),
                ),
                (
                    "is_partime",
                    models.BooleanField(
                        choices=[(True, "Tiempo completo"), (False, "Medio tiempo")],
                        default=False,
                        verbose_name="Tipo de jornada",
                    ),
                ),
                (
                    "examen_medico",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="documentos/examenes/",
                        verbose_name="Examen médico",
                    ),
                ),
                (
                    "contrato",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="documentos/contratos/",
                        verbose_name="Contrato",
                    ),
                ),
            ],
            options={
                "verbose_name": "Perfil",
                "verbose_name_plural": "Perfiles",
                "ordering": ["-id"],
            },
        ),
        migrations.CreateModel(
            name="Statistics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "asistencia",
                    models.PositiveIntegerField(default=0, verbose_name="Asistencia"),
                ),
                (
                    "vacaciones",
                    models.PositiveIntegerField(default=0, verbose_name="Vacaciones"),
                ),
                (
                    "permisos",
                    models.PositiveIntegerField(default=0, verbose_name="Permisos"),
                ),
            ],
            options={
                "db_table": "statistics",
            },
        ),
    ]
